// Generated by https://quicktype.io

import { DishItem } from './dishItem';
import { Ingredient } from './ingredient';
import { Participant } from './participant';
import { Request } from './request';
import { Result } from './result';

export interface Transaction {
  id: number;
  type: TransactionType;
  typeVarchar: TransactionType;
  month: number;
  year: number;
  points: number;
  description: null | string;
  beforePoints: number;
  afterPoints: number;
  isPending: boolean;
  isDeleted: boolean;
  deletedAt: null;
  createdAt: string;
  participant: Participant;
  request: Request | null;
  rollbackTransaction: null;
  sourceRollbackTransaction: null;
  dishItem: DishItem | null;
  transactionSnaps: any[];
  transactionParticipants: any[];
  transactionResults: any[];
  transactionJobsProfiles: any[];
}

export enum TransactionType {
  INCOME = 'INCOME',
  EXPENSE = 'EXPENSE',
}

export interface TransactionResult {
  id: number;
  transaction: Transaction;
}

export interface Dish {
  id: number;
  order: number;
  name: string;
  description: null;
  hierarchy: string;
  isDeleted: boolean;
  deletedAt: null;
}
